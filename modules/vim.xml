<xvoice>
    <vocab name='vim' enableOn='editing'> <![CDATA[
        INCLUDE "numbers.bnf"
        INCLUDE "keys.bnf"

        <hldir> = next -> Next | previous -> Prev .
        <hlblock> = for loop -> for | while | switch | conditional -> if .
        <selaction> = highlight -> Grabobj | yank -> Yankobj .
        <seltype> = spaces -> " " | words -> "e" | lines -> "l" .
        <selection> = {<selaction>} {<raw-number>} {<seltype>}
                -> <key char=':call {1}({3},{2})\\r' /> .
        <<root>> = editor commands off -> <grammar name='vim' action='off' />
            |exit ->        <key char=':q\\r' />
                <grammar name='vim' action='off' />
                <grammar name='shell' action='on' />
            |<selection>
            |highlight this block -> <key char=':Thisblock\\r' />
            |highlight {<hldir>} {<hlblock>} -> <key char=':{1}{2}\\r' />
            |move this {<raw-number>} words {left -> b\\b | right -> w\\b } ->
                <key char="d{1}{2}p`[v`]" />
            |move this {<raw-number>} lines {up -> kk | down -> jk } ->
                <key char="d{1}{2}p`[V`]" />
            |{(leave -> 'm' | jump to -> "'")} {global -> shift='true'}?
                mark {<alphachar>} -> <key char={1}><key char={3} {2} />
            |yank {(to register {<alphachar>} -> <key char='"' />
                    <key char={1} />)}? -> {1}<key char='y' />
            |put {(from register {<alphachar>} -> <key char='"' />
                <key char={1} />)}? -> {1}<key char='p' />
            |member ->              <key char='\.'/>
                    <key char='o' control='true'/>
                    <key char=':Getstruct\\r'/>
            |reference member ->              <key char='-&gt;'/>
                    <key char='o' control='true'/>
                    <key char=':Getstruct\\r'/>
            |pound define ->        <key char='#define '/>
            |pound include ->        <key char='#include '/>
            |static ->              <key char='static '/>
            |constant ->            <key char='const '/>
            |integer ->             <key char='int '/>
            |character ->           <key char='char '/>
            |void ->                <key char='void '/>
            |while ->               <key char='while '/>
            |switch ->              <key char='switch '/>
            |case ->                <key char='case '/>
            |else ->                <key char='else '/>
            |for loop ->            <key char='for '/>
            |regular expression ->  <key char='grep '/>
            |next function ->       <key char=':Findfunc\\r'/>
            |previous function ->   <key char=':Prevfunc\\r'/>
            |list functions ->      <key char=':Listfunc\\r\\r\\r:cl\\r'/>
            |next in list ->        <key char=':cn\\r'/>
            |previous in list ->    <key char=':cp\\r'/>
            |list element {<raw-number>} ->    <key char=':cc {1}\\r'/>
            |line numbers off ->    <key char=':set nonu\\r'/>
            |line numbers on ->     <key char=':set nu\\r'/>
            |make tags ->           <key char=':!makectags\\r'/>
            |read help ->           <key char=':help\\r'/>
                                    <key char='w' control='true'/>
                                    <key char='_'/>
            |build file ->          <key char=':make\\r'/>
            |switch buffer ->       <key char='6' control='true'/>
            |list buffers ->        <key char=':ls\\r' />
            |top of file ->         <key char='gg'/>
            |again ->               <key char='\.'/>
            |bottom of file ->      <key char='G'/>
            |erase line ->          <key char='u' control='true'/>
            |open buffer {<number>} -> {1} <key char='6' control='true'/>
            |expand ->              <key char='n' control='true'/>
            |back expand ->         <key char='p' control='true'/>
            |open file ->           <key char=':e '/>
            |undo ->                <key char='u'/>
            |end of line ->         <key char='\$'/>
            |beginning of line ->   <key char='_'/>
            |change word ->         <key char='cw'/>
            |delete word ->         <key char='dw'/>
            |delete line ->         <key char='dd'/>
            |push tag ->            <key char=']' control='true'/>
            |pop tag ->             <key char='t' control='true'/>
            |next tag ->            <key char=':tn\\r' />
            |new line ->            <key char='m' control='true'/>
            |search backward ->     <key char='?'/>
            |search ->              <key char='/'/>
            |save file ->           <key char=':w\\r'/>
            |previous ->            <key char='N'/>
            |next ->                <key char='n'/>
            |yank line ->           <key char='Y'/>
            |yank word ->           <key char='yw'/>
            |put ->                 <key char='p'/>
            |scroll back ->         <key char='u' control='true'/>
            |scroll forward ->      <key char='d' control='true'/>
            |move left {<number>} words -> {1} <key char='b'/>
            |move right {<number>} words -> {1} <key char='w'/>
            |move left {<number>} spaces -> {1} <key char='&Left;'/>
            |move right {<number>} spaces -> {1} <key char='&Right;'/>
            |move up {<number>} lines -> {1} <key char='&Up;'/>
            |move down {<number>} lines -> {1} <key char='&Down;'/>
            |jump to line {<number>} -> {1} <key char='gg'/> .
    ]]> </vocab>
</xvoice>
